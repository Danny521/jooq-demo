/*
 * This file is generated by jOOQ.
*/
package com.mt.demo.db.tables;


import com.mt.demo.db.Keys;
import com.mt.demo.db.PersonServiceSchema;
import com.mt.demo.db.tables.records.UsersInfoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class USERS_TABLE extends TableImpl<UsersInfoRecord> {

    private static final long serialVersionUID = 1849078574;

    /**
     * The reference instance of <code>person_service_schema.users</code>
     */
    public static final USERS_TABLE USERS = new USERS_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsersInfoRecord> getRecordType() {
        return UsersInfoRecord.class;
    }

    /**
     * The column <code>person_service_schema.users.id</code>.
     */
    public final TableField<UsersInfoRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>person_service_schema.users.name</code>.
     */
    public final TableField<UsersInfoRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(200).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>person_service_schema.users.id_card_number</code>.
     */
    public final TableField<UsersInfoRecord, String> ID_CARD_NUMBER = createField("id_card_number", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>person_service_schema.users.gender</code>.
     */
    public final TableField<UsersInfoRecord, Integer> GENDER = createField("gender", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>person_service_schema.users.phone_no</code>.
     */
    public final TableField<UsersInfoRecord, String> PHONE_NO = createField("phone_no", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>person_service_schema.users.email</code>.
     */
    public final TableField<UsersInfoRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>person_service_schema.users.status</code>.
     */
    public final TableField<UsersInfoRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>person_service_schema.users.department</code>.
     */
    public final TableField<UsersInfoRecord, String> DEPARTMENT = createField("department", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>person_service_schema.users.create_time</code>.
     */
    public final TableField<UsersInfoRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>person_service_schema.users</code> table reference
     */
    public USERS_TABLE() {
        this("users", null);
    }

    /**
     * Create an aliased <code>person_service_schema.users</code> table reference
     */
    public USERS_TABLE(String alias) {
        this(alias, USERS);
    }

    private USERS_TABLE(String alias, Table<UsersInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private USERS_TABLE(String alias, Table<UsersInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PersonServiceSchema.PERSON_SERVICE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UsersInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_USERS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UsersInfoRecord> getPrimaryKey() {
        return Keys.KEY_USERS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UsersInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<UsersInfoRecord>>asList(Keys.KEY_USERS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public USERS_TABLE as(String alias) {
        return new USERS_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public USERS_TABLE rename(String name) {
        return new USERS_TABLE(name, null);
    }
}
