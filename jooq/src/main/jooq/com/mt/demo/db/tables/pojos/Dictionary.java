/*
 * This file is generated by jOOQ.
*/
package com.mt.demo.db.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * 字典表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dictionary implements Serializable {

    private static final long serialVersionUID = 1408198715;

    private String  dicId;
    private String  parentKey;
    private String  key;
    private String  value;
    private String  valueJp;
    private String  category;
    private String  summary;
    private Integer sortNum;

    public Dictionary() {}

    public Dictionary(Dictionary value) {
        this.dicId = value.dicId;
        this.parentKey = value.parentKey;
        this.key = value.key;
        this.value = value.value;
        this.valueJp = value.valueJp;
        this.category = value.category;
        this.summary = value.summary;
        this.sortNum = value.sortNum;
    }

    public Dictionary(
        String  dicId,
        String  parentKey,
        String  key,
        String  value,
        String  valueJp,
        String  category,
        String  summary,
        Integer sortNum
    ) {
        this.dicId = dicId;
        this.parentKey = parentKey;
        this.key = key;
        this.value = value;
        this.valueJp = valueJp;
        this.category = category;
        this.summary = summary;
        this.sortNum = sortNum;
    }

    public String getDicId() {
        return this.dicId;
    }

    public Dictionary setDicId(String dicId) {
        this.dicId = dicId;
        return this;
    }

    public String getParentKey() {
        return this.parentKey;
    }

    public Dictionary setParentKey(String parentKey) {
        this.parentKey = parentKey;
        return this;
    }

    public String getKey() {
        return this.key;
    }

    public Dictionary setKey(String key) {
        this.key = key;
        return this;
    }

    public String getValue() {
        return this.value;
    }

    public Dictionary setValue(String value) {
        this.value = value;
        return this;
    }

    public String getValueJp() {
        return this.valueJp;
    }

    public Dictionary setValueJp(String valueJp) {
        this.valueJp = valueJp;
        return this;
    }

    public String getCategory() {
        return this.category;
    }

    public Dictionary setCategory(String category) {
        this.category = category;
        return this;
    }

    public String getSummary() {
        return this.summary;
    }

    public Dictionary setSummary(String summary) {
        this.summary = summary;
        return this;
    }

    public Integer getSortNum() {
        return this.sortNum;
    }

    public Dictionary setSortNum(Integer sortNum) {
        this.sortNum = sortNum;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Dictionary other = (Dictionary) obj;
        if (dicId == null) {
            if (other.dicId != null)
                return false;
        }
        else if (!dicId.equals(other.dicId))
            return false;
        if (parentKey == null) {
            if (other.parentKey != null)
                return false;
        }
        else if (!parentKey.equals(other.parentKey))
            return false;
        if (key == null) {
            if (other.key != null)
                return false;
        }
        else if (!key.equals(other.key))
            return false;
        if (value == null) {
            if (other.value != null)
                return false;
        }
        else if (!value.equals(other.value))
            return false;
        if (valueJp == null) {
            if (other.valueJp != null)
                return false;
        }
        else if (!valueJp.equals(other.valueJp))
            return false;
        if (category == null) {
            if (other.category != null)
                return false;
        }
        else if (!category.equals(other.category))
            return false;
        if (summary == null) {
            if (other.summary != null)
                return false;
        }
        else if (!summary.equals(other.summary))
            return false;
        if (sortNum == null) {
            if (other.sortNum != null)
                return false;
        }
        else if (!sortNum.equals(other.sortNum))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((dicId == null) ? 0 : dicId.hashCode());
        result = prime * result + ((parentKey == null) ? 0 : parentKey.hashCode());
        result = prime * result + ((key == null) ? 0 : key.hashCode());
        result = prime * result + ((value == null) ? 0 : value.hashCode());
        result = prime * result + ((valueJp == null) ? 0 : valueJp.hashCode());
        result = prime * result + ((category == null) ? 0 : category.hashCode());
        result = prime * result + ((summary == null) ? 0 : summary.hashCode());
        result = prime * result + ((sortNum == null) ? 0 : sortNum.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Dictionary (");

        sb.append(dicId);
        sb.append(", ").append(parentKey);
        sb.append(", ").append(key);
        sb.append(", ").append(value);
        sb.append(", ").append(valueJp);
        sb.append(", ").append(category);
        sb.append(", ").append(summary);
        sb.append(", ").append(sortNum);

        sb.append(")");
        return sb.toString();
    }
}
