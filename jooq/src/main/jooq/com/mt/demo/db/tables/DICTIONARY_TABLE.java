/*
 * This file is generated by jOOQ.
*/
package com.mt.demo.db.tables;


import com.mt.demo.db.Keys;
import com.mt.demo.db.PersonServiceSchema;
import com.mt.demo.db.tables.records.DictionaryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * 字典表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DICTIONARY_TABLE extends TableImpl<DictionaryRecord> {

    private static final long serialVersionUID = -1419313818;

    /**
     * The reference instance of <code>person_service_schema.sys_dictionary</code>
     */
    public static final DICTIONARY_TABLE DICTIONARY = new DICTIONARY_TABLE();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DictionaryRecord> getRecordType() {
        return DictionaryRecord.class;
    }

    /**
     * The column <code>person_service_schema.sys_dictionary.dic_id</code>.
     */
    public final TableField<DictionaryRecord, String> DIC_ID = createField("dic_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>person_service_schema.sys_dictionary.parent_key</code>. 父项key
     */
    public final TableField<DictionaryRecord, String> PARENT_KEY = createField("parent_key", org.jooq.impl.SQLDataType.VARCHAR.length(40).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "父项key");

    /**
     * The column <code>person_service_schema.sys_dictionary.key</code>.
     */
    public final TableField<DictionaryRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>person_service_schema.sys_dictionary.value</code>.
     */
    public final TableField<DictionaryRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>person_service_schema.sys_dictionary.value_jp</code>. value值简拼
     */
    public final TableField<DictionaryRecord, String> VALUE_JP = createField("value_jp", org.jooq.impl.SQLDataType.VARCHAR.length(500).nullable(false), this, "value值简拼");

    /**
     * The column <code>person_service_schema.sys_dictionary.category</code>. 字典类型
     */
    public final TableField<DictionaryRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "字典类型");

    /**
     * The column <code>person_service_schema.sys_dictionary.summary</code>. 字典说明
     */
    public final TableField<DictionaryRecord, String> SUMMARY = createField("summary", org.jooq.impl.SQLDataType.VARCHAR.length(100).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "字典说明");

    /**
     * The column <code>person_service_schema.sys_dictionary.sort_num</code>. 字典排序
     */
    public final TableField<DictionaryRecord, Integer> SORT_NUM = createField("sort_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "字典排序");

    /**
     * Create a <code>person_service_schema.sys_dictionary</code> table reference
     */
    public DICTIONARY_TABLE() {
        this("sys_dictionary", null);
    }

    /**
     * Create an aliased <code>person_service_schema.sys_dictionary</code> table reference
     */
    public DICTIONARY_TABLE(String alias) {
        this(alias, DICTIONARY);
    }

    private DICTIONARY_TABLE(String alias, Table<DictionaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private DICTIONARY_TABLE(String alias, Table<DictionaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "字典表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PersonServiceSchema.PERSON_SERVICE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DictionaryRecord> getPrimaryKey() {
        return Keys.KEY_SYS_DICTIONARY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DictionaryRecord>> getKeys() {
        return Arrays.<UniqueKey<DictionaryRecord>>asList(Keys.KEY_SYS_DICTIONARY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DICTIONARY_TABLE as(String alias) {
        return new DICTIONARY_TABLE(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DICTIONARY_TABLE rename(String name) {
        return new DICTIONARY_TABLE(name, null);
    }
}
